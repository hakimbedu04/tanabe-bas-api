//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SF_DAL.BAS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bas_trialEntities : DbContext
    {
        public bas_trialEntities()
            : base("name=bas_trialEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<t_visit> t_visit { get; set; }
        public virtual DbSet<t_visit_product> t_visit_product { get; set; }
        public virtual DbSet<t_visit_product_topic> t_visit_product_topic { get; set; }
        public virtual DbSet<C_parameter> C_parameter { get; set; }
        public virtual DbSet<log_login> log_login { get; set; }
        public virtual DbSet<All_Karyawan> All_Karyawan { get; set; }
        public virtual DbSet<m_bo> m_bo { get; set; }
        public virtual DbSet<m_customer_aso> m_customer_aso { get; set; }
        public virtual DbSet<m_doctor> m_doctor { get; set; }
        public virtual DbSet<m_event> m_event { get; set; }
        public virtual DbSet<m_gl_cs> m_gl_cs { get; set; }
        public virtual DbSet<m_info_feedback_mobile> m_info_feedback_mobile { get; set; }
        public virtual DbSet<m_product> m_product { get; set; }
        public virtual DbSet<m_regional> m_regional { get; set; }
        public virtual DbSet<m_rep> m_rep { get; set; }
        public virtual DbSet<m_role> m_role { get; set; }
        public virtual DbSet<m_sbo> m_sbo { get; set; }
        public virtual DbSet<m_sponsor> m_sponsor { get; set; }
        public virtual DbSet<m_status> m_status { get; set; }
        public virtual DbSet<m_topic> m_topic { get; set; }
        public virtual DbSet<t_expense_approval> t_expense_approval { get; set; }
        public virtual DbSet<t_expense_attachment> t_expense_attachment { get; set; }
        public virtual DbSet<t_expense_detail> t_expense_detail { get; set; }
        public virtual DbSet<t_gps_mobile> t_gps_mobile { get; set; }
        public virtual DbSet<t_info_feedback_topic_mapping_mobile> t_info_feedback_topic_mapping_mobile { get; set; }
        public virtual DbSet<t_material_order> t_material_order { get; set; }
        public virtual DbSet<t_sales> t_sales { get; set; }
        public virtual DbSet<t_sales_product> t_sales_product { get; set; }
        public virtual DbSet<t_sales_product_actual> t_sales_product_actual { get; set; }
        public virtual DbSet<t_shift_log> t_shift_log { get; set; }
        public virtual DbSet<t_signature_mobile> t_signature_mobile { get; set; }
        public virtual DbSet<t_sp_approval> t_sp_approval { get; set; }
        public virtual DbSet<t_sp_attachment> t_sp_attachment { get; set; }
        public virtual DbSet<usermobile> usermobiles { get; set; }
        public virtual DbSet<v_auth_sp> v_auth_sp { get; set; }
        public virtual DbSet<v_doctor_sponsor> v_doctor_sponsor { get; set; }
        public virtual DbSet<v_expense> v_expense { get; set; }
        public virtual DbSet<v_info_feedback> v_info_feedback { get; set; }
        public virtual DbSet<v_m_doctor> v_m_doctor { get; set; }
        public virtual DbSet<v_product_price> v_product_price { get; set; }
        public virtual DbSet<v_rep_admin> v_rep_admin { get; set; }
        public virtual DbSet<v_rep_full> v_rep_full { get; set; }
        public virtual DbSet<v_rep_full_new> v_rep_full_new { get; set; }
        public virtual DbSet<v_sales_plan_2> v_sales_plan_2 { get; set; }
        public virtual DbSet<v_sales_product> v_sales_product { get; set; }
        public virtual DbSet<v_sp_product> v_sp_product { get; set; }
        public virtual DbSet<v_spr> v_spr { get; set; }
        public virtual DbSet<v_visit_plan> v_visit_plan { get; set; }
        public virtual DbSet<v_visit_plan_mobile> v_visit_plan_mobile { get; set; }
        public virtual DbSet<v_visit_plan_new> v_visit_plan_new { get; set; }
        public virtual DbSet<v_visit_product> v_visit_product { get; set; }
        public virtual DbSet<v_visit_product_topic> v_visit_product_topic { get; set; }
        public virtual DbSet<t_visit_associate> t_visit_associate { get; set; }
        public virtual DbSet<v_visit_associate> v_visit_associate { get; set; }
        public virtual DbSet<m_position> m_position { get; set; }
    
        public virtual ObjectResult<string> SP_GET_NEW_VISIT_NUMBER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_NEW_VISIT_NUMBER");
        }
    
        public virtual ObjectResult<SP_SELECT_DOCTOR_LIST_NEW_Result> SP_SELECT_DOCTOR_LIST_NEW(string rep_id, string rep_position)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_DOCTOR_LIST_NEW_Result>("SP_SELECT_DOCTOR_LIST_NEW", rep_idParameter, rep_positionParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_DOCTOR_PLANNED_DETAIL_Result> SP_SELECT_DOCTOR_PLANNED_DETAIL(Nullable<int> dr_code)
        {
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_DOCTOR_PLANNED_DETAIL_Result>("SP_SELECT_DOCTOR_PLANNED_DETAIL", dr_codeParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_PLAN_Result> SP_SELECT_VISIT_PLAN(string rep_id, Nullable<int> day, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_PLAN_Result>("SP_SELECT_VISIT_PLAN", rep_idParameter, dayParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_USER_PRODUCT_Result> SP_SELECT_VISIT_USER_PRODUCT(string rep_id, string visit_id, Nullable<int> sales_date_plan, Nullable<int> sales_year_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var sales_date_planParameter = sales_date_plan.HasValue ?
                new ObjectParameter("sales_date_plan", sales_date_plan) :
                new ObjectParameter("sales_date_plan", typeof(int));
    
            var sales_year_planParameter = sales_year_plan.HasValue ?
                new ObjectParameter("sales_year_plan", sales_year_plan) :
                new ObjectParameter("sales_year_plan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_USER_PRODUCT_Result>("SP_SELECT_VISIT_USER_PRODUCT", rep_idParameter, visit_idParameter, sales_date_planParameter, sales_year_planParameter);
        }
    
        public virtual int SP_COPY_SALES_PRODUCT_PLAN(string rep_id, string visit_id, Nullable<int> from_month, Nullable<int> from_year, Nullable<int> curr_month, Nullable<int> curr_year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var from_monthParameter = from_month.HasValue ?
                new ObjectParameter("from_month", from_month) :
                new ObjectParameter("from_month", typeof(int));
    
            var from_yearParameter = from_year.HasValue ?
                new ObjectParameter("from_year", from_year) :
                new ObjectParameter("from_year", typeof(int));
    
            var curr_monthParameter = curr_month.HasValue ?
                new ObjectParameter("curr_month", curr_month) :
                new ObjectParameter("curr_month", typeof(int));
    
            var curr_yearParameter = curr_year.HasValue ?
                new ObjectParameter("curr_year", curr_year) :
                new ObjectParameter("curr_year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COPY_SALES_PRODUCT_PLAN", rep_idParameter, visit_idParameter, from_monthParameter, from_yearParameter, curr_monthParameter, curr_yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_SP_PLAN_Result> SP_SELECT_VISIT_SP_PLAN(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_SP_PLAN_Result>("SP_SELECT_VISIT_SP_PLAN", visit_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_SP_REALIZATION_Result> SP_SELECT_VISIT_SP_REALIZATION(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_SP_REALIZATION_Result>("SP_SELECT_VISIT_SP_REALIZATION", visit_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VOUCHER_DETAIL_Result> SP_SELECT_VOUCHER_DETAIL(string spr_no)
        {
            var spr_noParameter = spr_no != null ?
                new ObjectParameter("spr_no", spr_no) :
                new ObjectParameter("spr_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VOUCHER_DETAIL_Result>("SP_SELECT_VOUCHER_DETAIL", spr_noParameter);
        }
    
        public virtual int SP_SP_APPROVAL(string spa_approval, string spa_comment, Nullable<int> spa_id)
        {
            var spa_approvalParameter = spa_approval != null ?
                new ObjectParameter("spa_approval", spa_approval) :
                new ObjectParameter("spa_approval", typeof(string));
    
            var spa_commentParameter = spa_comment != null ?
                new ObjectParameter("spa_comment", spa_comment) :
                new ObjectParameter("spa_comment", typeof(string));
    
            var spa_idParameter = spa_id.HasValue ?
                new ObjectParameter("spa_id", spa_id) :
                new ObjectParameter("spa_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SP_APPROVAL", spa_approvalParameter, spa_commentParameter, spa_idParameter);
        }
    
        public virtual int SP_SP_APPROVAL_REALIZATION(string spa_approval, string spa_comment, Nullable<int> spa_id)
        {
            var spa_approvalParameter = spa_approval != null ?
                new ObjectParameter("spa_approval", spa_approval) :
                new ObjectParameter("spa_approval", typeof(string));
    
            var spa_commentParameter = spa_comment != null ?
                new ObjectParameter("spa_comment", spa_comment) :
                new ObjectParameter("spa_comment", typeof(string));
    
            var spa_idParameter = spa_id.HasValue ?
                new ObjectParameter("spa_id", spa_id) :
                new ObjectParameter("spa_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SP_APPROVAL_REALIZATION", spa_approvalParameter, spa_commentParameter, spa_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SELECT_IS_ANY_DOCTOR_UNPLANED(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SELECT_IS_ANY_DOCTOR_UNPLANED", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SELECT_IS_ANY_DOCTOR_UNPLANED_USER(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SELECT_IS_ANY_DOCTOR_UNPLANED_USER", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SELECT_IS_ANY_VISIT_UNPLANED_PRODUCT(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SELECT_IS_ANY_VISIT_UNPLANED_PRODUCT", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK_Result> SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK(string rep_id, Nullable<System.DateTime> visit_date_plan, Nullable<int> dr_code)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK_Result>("SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK", rep_idParameter, visit_date_planParameter, dr_codeParameter);
        }
    
        public virtual int SP_INSERT_VISIT_PLAN(string visit_id, string rep_id, Nullable<System.DateTime> visit_date_plan, Nullable<int> dr_code, string rep_position)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_VISIT_PLAN", visit_idParameter, rep_idParameter, visit_date_planParameter, dr_codeParameter, rep_positionParameter);
        }
    
        public virtual int SP_INSERT_VISIT_PRODUCT(string visit_id, string visit_code, Nullable<System.DateTime> vd_date_saved)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var visit_codeParameter = visit_code != null ?
                new ObjectParameter("visit_code", visit_code) :
                new ObjectParameter("visit_code", typeof(string));
    
            var vd_date_savedParameter = vd_date_saved.HasValue ?
                new ObjectParameter("vd_date_saved", vd_date_saved) :
                new ObjectParameter("vd_date_saved", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_VISIT_PRODUCT", visit_idParameter, visit_codeParameter, vd_date_savedParameter);
        }
    
        public virtual int SP_INSERT_VISIT_REALIZATION(string visit_id, string rep_id, string visit_info, Nullable<int> visit_realization, Nullable<int> sp_realization_stat, Nullable<double> sp_real_amount, string e_name, string e_place)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var sp_realization_statParameter = sp_realization_stat.HasValue ?
                new ObjectParameter("sp_realization_stat", sp_realization_stat) :
                new ObjectParameter("sp_realization_stat", typeof(int));
    
            var sp_real_amountParameter = sp_real_amount.HasValue ?
                new ObjectParameter("sp_real_amount", sp_real_amount) :
                new ObjectParameter("sp_real_amount", typeof(double));
    
            var e_nameParameter = e_name != null ?
                new ObjectParameter("e_name", e_name) :
                new ObjectParameter("e_name", typeof(string));
    
            var e_placeParameter = e_place != null ?
                new ObjectParameter("e_place", e_place) :
                new ObjectParameter("e_place", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_VISIT_REALIZATION", visit_idParameter, rep_idParameter, visit_infoParameter, visit_realizationParameter, sp_realization_statParameter, sp_real_amountParameter, e_nameParameter, e_placeParameter);
        }
    
        public virtual int SP_INSERT_VISIT_REALIZATION_WITH_ADDITIONAL_SP(string visit_id, string rep_id, string visit_info, Nullable<int> visit_realization, Nullable<double> sp_real_amount, string budgetAllocation, string listAttachment)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var sp_real_amountParameter = sp_real_amount.HasValue ?
                new ObjectParameter("sp_real_amount", sp_real_amount) :
                new ObjectParameter("sp_real_amount", typeof(double));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var listAttachmentParameter = listAttachment != null ?
                new ObjectParameter("listAttachment", listAttachment) :
                new ObjectParameter("listAttachment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_VISIT_REALIZATION_WITH_ADDITIONAL_SP", visit_idParameter, rep_idParameter, visit_infoParameter, visit_realizationParameter, sp_real_amountParameter, budgetAllocationParameter, listAttachmentParameter);
        }
    
        public virtual int SP_INSERT_SALES_PRODUCT_VISIT(string rep_id, string visit_id, Nullable<int> sales_date_plan, Nullable<int> sales_year_plan, string prd_code, Nullable<int> sp_target_qty, string sp_note, Nullable<int> sp_sp, Nullable<int> sp_percentage)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var sales_date_planParameter = sales_date_plan.HasValue ?
                new ObjectParameter("sales_date_plan", sales_date_plan) :
                new ObjectParameter("sales_date_plan", typeof(int));
    
            var sales_year_planParameter = sales_year_plan.HasValue ?
                new ObjectParameter("sales_year_plan", sales_year_plan) :
                new ObjectParameter("sales_year_plan", typeof(int));
    
            var prd_codeParameter = prd_code != null ?
                new ObjectParameter("prd_code", prd_code) :
                new ObjectParameter("prd_code", typeof(string));
    
            var sp_target_qtyParameter = sp_target_qty.HasValue ?
                new ObjectParameter("sp_target_qty", sp_target_qty) :
                new ObjectParameter("sp_target_qty", typeof(int));
    
            var sp_noteParameter = sp_note != null ?
                new ObjectParameter("sp_note", sp_note) :
                new ObjectParameter("sp_note", typeof(string));
    
            var sp_spParameter = sp_sp.HasValue ?
                new ObjectParameter("sp_sp", sp_sp) :
                new ObjectParameter("sp_sp", typeof(int));
    
            var sp_percentageParameter = sp_percentage.HasValue ?
                new ObjectParameter("sp_percentage", sp_percentage) :
                new ObjectParameter("sp_percentage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SALES_PRODUCT_VISIT", rep_idParameter, visit_idParameter, sales_date_planParameter, sales_year_planParameter, prd_codeParameter, sp_target_qtyParameter, sp_noteParameter, sp_spParameter, sp_percentageParameter);
        }
    
        public virtual int SP_INSERT_PRODUCT_VISIT(string rep_id, string visit_id, string visit_code, Nullable<int> sp_sp, Nullable<int> sp_percentage)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var visit_codeParameter = visit_code != null ?
                new ObjectParameter("visit_code", visit_code) :
                new ObjectParameter("visit_code", typeof(string));
    
            var sp_spParameter = sp_sp.HasValue ?
                new ObjectParameter("sp_sp", sp_sp) :
                new ObjectParameter("sp_sp", typeof(int));
    
            var sp_percentageParameter = sp_percentage.HasValue ?
                new ObjectParameter("sp_percentage", sp_percentage) :
                new ObjectParameter("sp_percentage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCT_VISIT", rep_idParameter, visit_idParameter, visit_codeParameter, sp_spParameter, sp_percentageParameter);
        }
    
        public virtual int SP_INSERT_SP_2_ON_VISIT_PLAN(string visit_id, string eName, string budgetAllocation, Nullable<int> bAmount)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var bAmountParameter = bAmount.HasValue ?
                new ObjectParameter("bAmount", bAmount) :
                new ObjectParameter("bAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2_ON_VISIT_PLAN", visit_idParameter, eNameParameter, budgetAllocationParameter, bAmountParameter);
        }
    
        public virtual int SP_DELETE_PRODUCT_SALES(Nullable<int> sp_id)
        {
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_PRODUCT_SALES", sp_idParameter);
        }
    
        public virtual int SP_DELETE_PRODUCT_SP_PLAN(string spp_id)
        {
            var spp_idParameter = spp_id != null ?
                new ObjectParameter("spp_id", spp_id) :
                new ObjectParameter("spp_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_PRODUCT_SP_PLAN", spp_idParameter);
        }
    
        public virtual int SP_DELETE_PRODUCT_VISIT(Nullable<int> vd_id)
        {
            var vd_idParameter = vd_id.HasValue ?
                new ObjectParameter("vd_id", vd_id) :
                new ObjectParameter("vd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_PRODUCT_VISIT", vd_idParameter);
        }
    
        public virtual int SP_DELETE_SP_PLAN(string spr_id)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_SP_PLAN", spr_idParameter);
        }
    
        public virtual int SP_DELETE_VISIT_PLAN(string visit_id, string rep_position)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_VISIT_PLAN", visit_idParameter, rep_positionParameter);
        }
    
        public virtual int SP_DELETE_VISIT_SP(Nullable<int> spds_id)
        {
            var spds_idParameter = spds_id.HasValue ?
                new ObjectParameter("spds_id", spds_id) :
                new ObjectParameter("spds_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_VISIT_SP", spds_idParameter);
        }
    
        public virtual int SP_UPDATE_VISIT_PLAN(string visit_id, Nullable<System.DateTime> visit_date_plan, Nullable<int> dr_code, string dr_code_old, string rep_position)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var dr_code_oldParameter = dr_code_old != null ?
                new ObjectParameter("dr_code_old", dr_code_old) :
                new ObjectParameter("dr_code_old", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_VISIT_PLAN", visit_idParameter, visit_date_planParameter, dr_codeParameter, dr_code_oldParameter, rep_positionParameter);
        }
    
        public virtual int SP_UPDATE_T_BUDGET(Nullable<int> tb_id, Nullable<int> b_owner, Nullable<int> tb_year, Nullable<int> tb_month, Nullable<System.DateTime> tb_date, Nullable<double> tb_debit, Nullable<double> tb_credit, string coa, string cob, string tb_info)
        {
            var tb_idParameter = tb_id.HasValue ?
                new ObjectParameter("tb_id", tb_id) :
                new ObjectParameter("tb_id", typeof(int));
    
            var b_ownerParameter = b_owner.HasValue ?
                new ObjectParameter("b_owner", b_owner) :
                new ObjectParameter("b_owner", typeof(int));
    
            var tb_yearParameter = tb_year.HasValue ?
                new ObjectParameter("tb_year", tb_year) :
                new ObjectParameter("tb_year", typeof(int));
    
            var tb_monthParameter = tb_month.HasValue ?
                new ObjectParameter("tb_month", tb_month) :
                new ObjectParameter("tb_month", typeof(int));
    
            var tb_dateParameter = tb_date.HasValue ?
                new ObjectParameter("tb_date", tb_date) :
                new ObjectParameter("tb_date", typeof(System.DateTime));
    
            var tb_debitParameter = tb_debit.HasValue ?
                new ObjectParameter("tb_debit", tb_debit) :
                new ObjectParameter("tb_debit", typeof(double));
    
            var tb_creditParameter = tb_credit.HasValue ?
                new ObjectParameter("tb_credit", tb_credit) :
                new ObjectParameter("tb_credit", typeof(double));
    
            var coaParameter = coa != null ?
                new ObjectParameter("coa", coa) :
                new ObjectParameter("coa", typeof(string));
    
            var cobParameter = cob != null ?
                new ObjectParameter("cob", cob) :
                new ObjectParameter("cob", typeof(string));
    
            var tb_infoParameter = tb_info != null ?
                new ObjectParameter("tb_info", tb_info) :
                new ObjectParameter("tb_info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_T_BUDGET", tb_idParameter, b_ownerParameter, tb_yearParameter, tb_monthParameter, tb_dateParameter, tb_debitParameter, tb_creditParameter, coaParameter, cobParameter, tb_infoParameter);
        }
    
        public virtual int SP_UPDATE_USER(string rep_id, Nullable<int> role_id, Nullable<System.DateTime> effective_datestart)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var effective_datestartParameter = effective_datestart.HasValue ?
                new ObjectParameter("effective_datestart", effective_datestart) :
                new ObjectParameter("effective_datestart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_USER", rep_idParameter, role_idParameter, effective_datestartParameter);
        }
    
        public virtual int SP_UPDATE_VISIT_PLAN_BY_DATE(string rep_id, string rep_position, string visit_info, Nullable<System.DateTime> visit_date_realization_saved, Nullable<System.DateTime> visit_date_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_date_realization_savedParameter = visit_date_realization_saved.HasValue ?
                new ObjectParameter("visit_date_realization_saved", visit_date_realization_saved) :
                new ObjectParameter("visit_date_realization_saved", typeof(System.DateTime));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_VISIT_PLAN_BY_DATE", rep_idParameter, rep_positionParameter, visit_infoParameter, visit_date_realization_savedParameter, visit_date_planParameter);
        }
    
        public virtual int SP_UPDATE_VISIT_PLAN_CANCELLATION(string visit_id, string visit_info, Nullable<System.DateTime> visit_date_realization_saved, string rep_position, string rep_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_date_realization_savedParameter = visit_date_realization_saved.HasValue ?
                new ObjectParameter("visit_date_realization_saved", visit_date_realization_saved) :
                new ObjectParameter("visit_date_realization_saved", typeof(System.DateTime));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_VISIT_PLAN_CANCELLATION", visit_idParameter, visit_infoParameter, visit_date_realization_savedParameter, rep_positionParameter, rep_idParameter);
        }
    
        public virtual ObjectResult<string> SP_UPDATE_VISIT_PRODUCT(Nullable<int> vd_id, string visit_code, Nullable<int> sp_sp, Nullable<int> sp_percentage)
        {
            var vd_idParameter = vd_id.HasValue ?
                new ObjectParameter("vd_id", vd_id) :
                new ObjectParameter("vd_id", typeof(int));
    
            var visit_codeParameter = visit_code != null ?
                new ObjectParameter("visit_code", visit_code) :
                new ObjectParameter("visit_code", typeof(string));
    
            var sp_spParameter = sp_sp.HasValue ?
                new ObjectParameter("sp_sp", sp_sp) :
                new ObjectParameter("sp_sp", typeof(int));
    
            var sp_percentageParameter = sp_percentage.HasValue ?
                new ObjectParameter("sp_percentage", sp_percentage) :
                new ObjectParameter("sp_percentage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPDATE_VISIT_PRODUCT", vd_idParameter, visit_codeParameter, sp_spParameter, sp_percentageParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_SP_ATTACHMENT_Result> SP_SELECT_SP_ATTACHMENT(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_SP_ATTACHMENT_Result>("SP_SELECT_SP_ATTACHMENT", visit_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_INSERT_ADDITIONAL_VISIT(string rep_id, Nullable<System.DateTime> visit_date_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_INSERT_ADDITIONAL_VISIT", rep_idParameter, visit_date_planParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_PRODUCT_TOPIC_LIST_Result> SP_SELECT_PRODUCT_TOPIC_LIST(Nullable<int> vd_id)
        {
            var vd_idParameter = vd_id.HasValue ?
                new ObjectParameter("vd_id", vd_id) :
                new ObjectParameter("vd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_PRODUCT_TOPIC_LIST_Result>("SP_SELECT_PRODUCT_TOPIC_LIST", vd_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_DOCTOR_LIST_Result> SP_SELECT_DOCTOR_LIST(string rep_id, string rep_position)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_DOCTOR_LIST_Result>("SP_SELECT_DOCTOR_LIST", rep_idParameter, rep_positionParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_PRODUCT_USER_Result> SP_SELECT_PRODUCT_USER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_PRODUCT_USER_Result>("SP_SELECT_PRODUCT_USER");
        }
    
        public virtual ObjectResult<SP_SELECT_PRODUCT_VISIT_Result> SP_SELECT_PRODUCT_VISIT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_PRODUCT_VISIT_Result>("SP_SELECT_PRODUCT_VISIT");
        }
    
        public virtual ObjectResult<SP_SELECT_REP_Result> SP_SELECT_REP(string rep_region)
        {
            var rep_regionParameter = rep_region != null ?
                new ObjectParameter("rep_region", rep_region) :
                new ObjectParameter("rep_region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_REP_Result>("SP_SELECT_REP", rep_regionParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_REP_FOR_VERIFICATION_Result> SP_SELECT_REP_FOR_VERIFICATION(string department, string rep_position, string rep_id)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_REP_FOR_VERIFICATION_Result>("SP_SELECT_REP_FOR_VERIFICATION", departmentParameter, rep_positionParameter, rep_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_REPORT_SALES_HISTORY_Result> SP_SELECT_REPORT_SALES_HISTORY(string spr_id)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_REPORT_SALES_HISTORY_Result>("SP_SELECT_REPORT_SALES_HISTORY", spr_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_REPORT_TARGET_Result> SP_SELECT_REPORT_TARGET(string department, string rep_position, string rep_id)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_REPORT_TARGET_Result>("SP_SELECT_REPORT_TARGET", departmentParameter, rep_positionParameter, rep_idParameter);
        }
    
        public virtual int SP_INSERT_TRANSACT_EMAIL(Nullable<int> month, Nullable<int> year, string transaction_id, string rep_id, Nullable<System.DateTime> date_sent)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var transaction_idParameter = transaction_id != null ?
                new ObjectParameter("transaction_id", transaction_id) :
                new ObjectParameter("transaction_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var date_sentParameter = date_sent.HasValue ?
                new ObjectParameter("date_sent", date_sent) :
                new ObjectParameter("date_sent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_TRANSACT_EMAIL", monthParameter, yearParameter, transaction_idParameter, rep_idParameter, date_sentParameter);
        }
    
        public virtual int SP_INSERT_PRODUCT_TOPIC(Nullable<int> vd_id, Nullable<int> topic_id)
        {
            var vd_idParameter = vd_id.HasValue ?
                new ObjectParameter("vd_id", vd_id) :
                new ObjectParameter("vd_id", typeof(int));
    
            var topic_idParameter = topic_id.HasValue ?
                new ObjectParameter("topic_id", topic_id) :
                new ObjectParameter("topic_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCT_TOPIC", vd_idParameter, topic_idParameter);
        }
    
        public virtual int SP_INSERT_SP_2_ON_VISIT_REALIZATION(string visit_id, string rep_id, string visit_info, Nullable<int> visit_realization, Nullable<double> sp_real_amount, string budgetAllocation, string e_name, string e_place, string listAttachment)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var sp_real_amountParameter = sp_real_amount.HasValue ?
                new ObjectParameter("sp_real_amount", sp_real_amount) :
                new ObjectParameter("sp_real_amount", typeof(double));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var e_nameParameter = e_name != null ?
                new ObjectParameter("e_name", e_name) :
                new ObjectParameter("e_name", typeof(string));
    
            var e_placeParameter = e_place != null ?
                new ObjectParameter("e_place", e_place) :
                new ObjectParameter("e_place", typeof(string));
    
            var listAttachmentParameter = listAttachment != null ?
                new ObjectParameter("listAttachment", listAttachment) :
                new ObjectParameter("listAttachment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2_ON_VISIT_REALIZATION", visit_idParameter, rep_idParameter, visit_infoParameter, visit_realizationParameter, sp_real_amountParameter, budgetAllocationParameter, e_nameParameter, e_placeParameter, listAttachmentParameter);
        }
    
        public virtual ObjectResult<string> SP_UPDATE_SALES_PRODUCT(Nullable<int> sp_id, Nullable<int> sp_target_qty, Nullable<int> sp_sp, Nullable<int> sp_percentage)
        {
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var sp_target_qtyParameter = sp_target_qty.HasValue ?
                new ObjectParameter("sp_target_qty", sp_target_qty) :
                new ObjectParameter("sp_target_qty", typeof(int));
    
            var sp_spParameter = sp_sp.HasValue ?
                new ObjectParameter("sp_sp", sp_sp) :
                new ObjectParameter("sp_sp", typeof(int));
    
            var sp_percentageParameter = sp_percentage.HasValue ?
                new ObjectParameter("sp_percentage", sp_percentage) :
                new ObjectParameter("sp_percentage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPDATE_SALES_PRODUCT", sp_idParameter, sp_target_qtyParameter, sp_spParameter, sp_percentageParameter);
        }
    
        public virtual int SP_UPDATE_SALES_PRODUCT_MOBILE(Nullable<int> sp_id, Nullable<int> sp_target_qty, Nullable<int> sp_sp, Nullable<int> sp_percentage)
        {
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var sp_target_qtyParameter = sp_target_qty.HasValue ?
                new ObjectParameter("sp_target_qty", sp_target_qty) :
                new ObjectParameter("sp_target_qty", typeof(int));
    
            var sp_spParameter = sp_sp.HasValue ?
                new ObjectParameter("sp_sp", sp_sp) :
                new ObjectParameter("sp_sp", typeof(int));
    
            var sp_percentageParameter = sp_percentage.HasValue ?
                new ObjectParameter("sp_percentage", sp_percentage) :
                new ObjectParameter("sp_percentage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SALES_PRODUCT_MOBILE", sp_idParameter, sp_target_qtyParameter, sp_spParameter, sp_percentageParameter);
        }
    
        public virtual int SP_INSERT_SP_ATTACHMENT(string visit_id, string file_name, string file_path)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var file_pathParameter = file_path != null ?
                new ObjectParameter("file_path", file_path) :
                new ObjectParameter("file_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_ATTACHMENT", visit_idParameter, file_nameParameter, file_pathParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_SPR_INFO_Result> SP_SELECT_SPR_INFO(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_SPR_INFO_Result>("SP_SELECT_SPR_INFO", visit_idParameter);
        }
    
        public virtual int SP_INSERT_SP_2_ON_VISIT_REALIZATION_ADDITIONAL(string visit_id, string info, string budgetAllocation, Nullable<double> amount_sp, string eName, string ePlace, string listAttachment)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("info", info) :
                new ObjectParameter("info", typeof(string));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var amount_spParameter = amount_sp.HasValue ?
                new ObjectParameter("amount_sp", amount_sp) :
                new ObjectParameter("amount_sp", typeof(double));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var listAttachmentParameter = listAttachment != null ?
                new ObjectParameter("listAttachment", listAttachment) :
                new ObjectParameter("listAttachment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2_ON_VISIT_REALIZATION_ADDITIONAL", visit_idParameter, infoParameter, budgetAllocationParameter, amount_spParameter, eNameParameter, ePlaceParameter, listAttachmentParameter);
        }
    
        public virtual ObjectResult<string> SP_UPDATE_REALIZATION_VISIT_ACTUAL(string visit_id, Nullable<int> dr_code, Nullable<int> visit_plan, Nullable<int> visit_realization, string visit_info, string visit_sp, Nullable<double> visit_sp_value)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var visit_planParameter = visit_plan.HasValue ?
                new ObjectParameter("visit_plan", visit_plan) :
                new ObjectParameter("visit_plan", typeof(int));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_spParameter = visit_sp != null ?
                new ObjectParameter("visit_sp", visit_sp) :
                new ObjectParameter("visit_sp", typeof(string));
    
            var visit_sp_valueParameter = visit_sp_value.HasValue ?
                new ObjectParameter("visit_sp_value", visit_sp_value) :
                new ObjectParameter("visit_sp_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPDATE_REALIZATION_VISIT_ACTUAL", visit_idParameter, dr_codeParameter, visit_planParameter, visit_realizationParameter, visit_infoParameter, visit_spParameter, visit_sp_valueParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_FINISHED_VISIT_Result> SP_SELECT_FINISHED_VISIT(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_FINISHED_VISIT_Result>("SP_SELECT_FINISHED_VISIT", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_SP_PLAN_Result> SP_SELECT_SP_PLAN(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_SP_PLAN_Result>("SP_SELECT_SP_PLAN", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual int SP_INSERT_SALES_PRODUCT(string sales_id, string prd_code, Nullable<int> sp_target_qty, string sp_note)
        {
            var sales_idParameter = sales_id != null ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(string));
    
            var prd_codeParameter = prd_code != null ?
                new ObjectParameter("prd_code", prd_code) :
                new ObjectParameter("prd_code", typeof(string));
    
            var sp_target_qtyParameter = sp_target_qty.HasValue ?
                new ObjectParameter("sp_target_qty", sp_target_qty) :
                new ObjectParameter("sp_target_qty", typeof(int));
    
            var sp_noteParameter = sp_note != null ?
                new ObjectParameter("sp_note", sp_note) :
                new ObjectParameter("sp_note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SALES_PRODUCT", sales_idParameter, prd_codeParameter, sp_target_qtyParameter, sp_noteParameter);
        }
    
        public virtual ObjectResult<string> SP_INSERT_SALES_PRODUCT_ACTUAL_MOBILE(Nullable<long> sp_id, Nullable<System.DateTime> spa_date, Nullable<long> spa_quantity, string spa_note)
        {
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(long));
    
            var spa_dateParameter = spa_date.HasValue ?
                new ObjectParameter("spa_date", spa_date) :
                new ObjectParameter("spa_date", typeof(System.DateTime));
    
            var spa_quantityParameter = spa_quantity.HasValue ?
                new ObjectParameter("spa_quantity", spa_quantity) :
                new ObjectParameter("spa_quantity", typeof(long));
    
            var spa_noteParameter = spa_note != null ?
                new ObjectParameter("spa_note", spa_note) :
                new ObjectParameter("spa_note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_INSERT_SALES_PRODUCT_ACTUAL_MOBILE", sp_idParameter, spa_dateParameter, spa_quantityParameter, spa_noteParameter);
        }
    
        public virtual ObjectResult<string> SP_UPDATE_SALES_PRODUCT_ACTUAL_MOBILE(Nullable<int> spa_id, Nullable<long> sp_id, Nullable<System.DateTime> spa_date, Nullable<long> spa_quantity, string spa_note)
        {
            var spa_idParameter = spa_id.HasValue ?
                new ObjectParameter("spa_id", spa_id) :
                new ObjectParameter("spa_id", typeof(int));
    
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(long));
    
            var spa_dateParameter = spa_date.HasValue ?
                new ObjectParameter("spa_date", spa_date) :
                new ObjectParameter("spa_date", typeof(System.DateTime));
    
            var spa_quantityParameter = spa_quantity.HasValue ?
                new ObjectParameter("spa_quantity", spa_quantity) :
                new ObjectParameter("spa_quantity", typeof(long));
    
            var spa_noteParameter = spa_note != null ?
                new ObjectParameter("spa_note", spa_note) :
                new ObjectParameter("spa_note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPDATE_SALES_PRODUCT_ACTUAL_MOBILE", spa_idParameter, sp_idParameter, spa_dateParameter, spa_quantityParameter, spa_noteParameter);
        }
    
        public virtual ObjectResult<string> SP_DELETE_SALES_PRODUCT_ACTUAL_MOBILE(string spa_id)
        {
            var spa_idParameter = spa_id != null ?
                new ObjectParameter("spa_id", spa_id) :
                new ObjectParameter("spa_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DELETE_SALES_PRODUCT_ACTUAL_MOBILE", spa_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_USER_ACTUAL_SEARCH_MOBILE_Result> SP_SELECT_USER_ACTUAL_SEARCH_MOBILE(string rep_id, Nullable<int> month, Nullable<int> year, string searchtext)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_USER_ACTUAL_SEARCH_MOBILE_Result>("SP_SELECT_USER_ACTUAL_SEARCH_MOBILE", rep_idParameter, monthParameter, yearParameter, searchtextParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCT_SP_PLAN_MOBILE_Result> SP_PRODUCT_SP_PLAN_MOBILE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCT_SP_PLAN_MOBILE_Result>("SP_PRODUCT_SP_PLAN_MOBILE");
        }
    
        public virtual int SP_INSERT_PRODUCT_SP_PLAN(string sprId, string productId)
        {
            var sprIdParameter = sprId != null ?
                new ObjectParameter("sprId", sprId) :
                new ObjectParameter("sprId", typeof(string));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCT_SP_PLAN", sprIdParameter, productIdParameter);
        }
    
        public virtual int SP_DELETE_SPEAKER_PLAN(Nullable<int> spds_id)
        {
            var spds_idParameter = spds_id.HasValue ?
                new ObjectParameter("spds_id", spds_id) :
                new ObjectParameter("spds_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_SPEAKER_PLAN", spds_idParameter);
        }
    
        public virtual int SP_INSERT_PARTICIPANT_EDIT(string spr_id, string sp_type, Nullable<int> sp_id, Nullable<int> dr_code, Nullable<int> sponsor_id, Nullable<double> budget_plan_value)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var sp_typeParameter = sp_type != null ?
                new ObjectParameter("sp_type", sp_type) :
                new ObjectParameter("sp_type", typeof(string));
    
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var sponsor_idParameter = sponsor_id.HasValue ?
                new ObjectParameter("sponsor_id", sponsor_id) :
                new ObjectParameter("sponsor_id", typeof(int));
    
            var budget_plan_valueParameter = budget_plan_value.HasValue ?
                new ObjectParameter("budget_plan_value", budget_plan_value) :
                new ObjectParameter("budget_plan_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PARTICIPANT_EDIT", spr_idParameter, sp_typeParameter, sp_idParameter, dr_codeParameter, sponsor_idParameter, budget_plan_valueParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_DOCTOR_LIST_SPEAKER_Result> SP_SELECT_DOCTOR_LIST_SPEAKER(string rep_id, string rep_position)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_DOCTOR_LIST_SPEAKER_Result>("SP_SELECT_DOCTOR_LIST_SPEAKER", rep_idParameter, rep_positionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SELECT_TRANSACT_EMAIL(Nullable<int> month, Nullable<int> year, string transaction_id, string rep_id, Nullable<System.DateTime> date_sent)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var transaction_idParameter = transaction_id != null ?
                new ObjectParameter("transaction_id", transaction_id) :
                new ObjectParameter("transaction_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var date_sentParameter = date_sent.HasValue ?
                new ObjectParameter("date_sent", date_sent) :
                new ObjectParameter("date_sent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SELECT_TRANSACT_EMAIL", monthParameter, yearParameter, transaction_idParameter, rep_idParameter, date_sentParameter);
        }
    
        public virtual int SP_UPDATE_SPEAKER_EDIT(Nullable<int> spds_id, Nullable<int> sponsor_id, Nullable<double> budget_plan_value)
        {
            var spds_idParameter = spds_id.HasValue ?
                new ObjectParameter("spds_id", spds_id) :
                new ObjectParameter("spds_id", typeof(int));
    
            var sponsor_idParameter = sponsor_id.HasValue ?
                new ObjectParameter("sponsor_id", sponsor_id) :
                new ObjectParameter("sponsor_id", typeof(int));
    
            var budget_plan_valueParameter = budget_plan_value.HasValue ?
                new ObjectParameter("budget_plan_value", budget_plan_value) :
                new ObjectParameter("budget_plan_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SPEAKER_EDIT", spds_idParameter, sponsor_idParameter, budget_plan_valueParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCT_VISIT_MOBILE_Result> SP_PRODUCT_VISIT_MOBILE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCT_VISIT_MOBILE_Result>("SP_PRODUCT_VISIT_MOBILE");
        }
    
        public virtual ObjectResult<string> SP_UPDATE_REALIZATION_VISIT_ACTUAL_MOBILE(string visit_id, Nullable<int> dr_code, Nullable<int> visit_plan, Nullable<int> visit_realization, string visit_info, string visit_sp, Nullable<double> visit_sp_value)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var visit_planParameter = visit_plan.HasValue ?
                new ObjectParameter("visit_plan", visit_plan) :
                new ObjectParameter("visit_plan", typeof(int));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_spParameter = visit_sp != null ?
                new ObjectParameter("visit_sp", visit_sp) :
                new ObjectParameter("visit_sp", typeof(string));
    
            var visit_sp_valueParameter = visit_sp_value.HasValue ?
                new ObjectParameter("visit_sp_value", visit_sp_value) :
                new ObjectParameter("visit_sp_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPDATE_REALIZATION_VISIT_ACTUAL_MOBILE", visit_idParameter, dr_codeParameter, visit_planParameter, visit_realizationParameter, visit_infoParameter, visit_spParameter, visit_sp_valueParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_NEW_SPR_ID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_NEW_SPR_ID");
        }
    
        public virtual int SP_INSERT_SP_1(string spr_id, string rep_id, string sptype, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string eName, string eTopic, string ePlace, Nullable<int> generalSponsor, Nullable<double> amount, string participant, string notes, string listProduct)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var sptypeParameter = sptype != null ?
                new ObjectParameter("sptype", sptype) :
                new ObjectParameter("sptype", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var eTopicParameter = eTopic != null ?
                new ObjectParameter("eTopic", eTopic) :
                new ObjectParameter("eTopic", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var generalSponsorParameter = generalSponsor.HasValue ?
                new ObjectParameter("GeneralSponsor", generalSponsor) :
                new ObjectParameter("GeneralSponsor", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var participantParameter = participant != null ?
                new ObjectParameter("participant", participant) :
                new ObjectParameter("participant", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_1", spr_idParameter, rep_idParameter, sptypeParameter, dateStartParameter, dateEndParameter, eNameParameter, eTopicParameter, ePlaceParameter, generalSponsorParameter, amountParameter, participantParameter, notesParameter, listProductParameter);
        }
    
        public virtual int SP_INSERT_SP_2(string spr_id, string rep_id, string sptype, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string products, string eName, string eTopic, string ePlace, Nullable<int> generalSponsor, Nullable<double> amount, string participant, string notes, string budgetAllocation, string listProduct)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var sptypeParameter = sptype != null ?
                new ObjectParameter("sptype", sptype) :
                new ObjectParameter("sptype", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var productsParameter = products != null ?
                new ObjectParameter("products", products) :
                new ObjectParameter("products", typeof(string));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var eTopicParameter = eTopic != null ?
                new ObjectParameter("eTopic", eTopic) :
                new ObjectParameter("eTopic", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var generalSponsorParameter = generalSponsor.HasValue ?
                new ObjectParameter("GeneralSponsor", generalSponsor) :
                new ObjectParameter("GeneralSponsor", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var participantParameter = participant != null ?
                new ObjectParameter("participant", participant) :
                new ObjectParameter("participant", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2", spr_idParameter, rep_idParameter, sptypeParameter, dateStartParameter, dateEndParameter, productsParameter, eNameParameter, eTopicParameter, ePlaceParameter, generalSponsorParameter, amountParameter, participantParameter, notesParameter, budgetAllocationParameter, listProductParameter);
        }
    
        public virtual int SP_INSERT_SP_347(string idspr, string rep_id, string sptype, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> generalSponsor, Nullable<double> amount, string notes, string listProduct)
        {
            var idsprParameter = idspr != null ?
                new ObjectParameter("idspr", idspr) :
                new ObjectParameter("idspr", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var sptypeParameter = sptype != null ?
                new ObjectParameter("sptype", sptype) :
                new ObjectParameter("sptype", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var generalSponsorParameter = generalSponsor.HasValue ?
                new ObjectParameter("GeneralSponsor", generalSponsor) :
                new ObjectParameter("GeneralSponsor", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_347", idsprParameter, rep_idParameter, sptypeParameter, dateStartParameter, dateEndParameter, generalSponsorParameter, amountParameter, notesParameter, listProductParameter);
        }
    
        public virtual int SP_INSERT_SP_6(string spr_id, string rep_id, string sptype, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string eName, string eTopic, string ePlace, Nullable<int> feeEventState, Nullable<double> feeEventAmount, Nullable<int> meetPackageState, Nullable<double> meetPackageAmount, string participant, string notes, string listProduct)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var sptypeParameter = sptype != null ?
                new ObjectParameter("sptype", sptype) :
                new ObjectParameter("sptype", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var eTopicParameter = eTopic != null ?
                new ObjectParameter("eTopic", eTopic) :
                new ObjectParameter("eTopic", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var feeEventStateParameter = feeEventState.HasValue ?
                new ObjectParameter("feeEventState", feeEventState) :
                new ObjectParameter("feeEventState", typeof(int));
    
            var feeEventAmountParameter = feeEventAmount.HasValue ?
                new ObjectParameter("feeEventAmount", feeEventAmount) :
                new ObjectParameter("feeEventAmount", typeof(double));
    
            var meetPackageStateParameter = meetPackageState.HasValue ?
                new ObjectParameter("meetPackageState", meetPackageState) :
                new ObjectParameter("meetPackageState", typeof(int));
    
            var meetPackageAmountParameter = meetPackageAmount.HasValue ?
                new ObjectParameter("meetPackageAmount", meetPackageAmount) :
                new ObjectParameter("meetPackageAmount", typeof(double));
    
            var participantParameter = participant != null ?
                new ObjectParameter("participant", participant) :
                new ObjectParameter("participant", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_6", spr_idParameter, rep_idParameter, sptypeParameter, dateStartParameter, dateEndParameter, eNameParameter, eTopicParameter, ePlaceParameter, feeEventStateParameter, feeEventAmountParameter, meetPackageStateParameter, meetPackageAmountParameter, participantParameter, notesParameter, listProductParameter);
        }
    
        public virtual int SP_INSERT_SP_8(string spr_id, string rep_id, string sptype, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string eName, string eTopic, string ePlace, string notes, string listDoctorSponsor, string listProduct)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var sptypeParameter = sptype != null ?
                new ObjectParameter("sptype", sptype) :
                new ObjectParameter("sptype", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var eTopicParameter = eTopic != null ?
                new ObjectParameter("eTopic", eTopic) :
                new ObjectParameter("eTopic", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var listDoctorSponsorParameter = listDoctorSponsor != null ?
                new ObjectParameter("listDoctorSponsor", listDoctorSponsor) :
                new ObjectParameter("listDoctorSponsor", typeof(string));
    
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_8", spr_idParameter, rep_idParameter, sptypeParameter, dateStartParameter, dateEndParameter, eNameParameter, eTopicParameter, ePlaceParameter, notesParameter, listDoctorSponsorParameter, listProductParameter);
        }
    
        public virtual int SP_UPDATE_BA_ON_PLAN(string spr_id, string sp_ba)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var sp_baParameter = sp_ba != null ?
                new ObjectParameter("sp_ba", sp_ba) :
                new ObjectParameter("sp_ba", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_BA_ON_PLAN", spr_idParameter, sp_baParameter);
        }
    
        public virtual int SP_UPDATE_SP_PLAN(string spr_id, string e_name, string e_topic, string e_place, Nullable<System.DateTime> e_dt_start, Nullable<System.DateTime> e_dt_end, string notes)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var e_nameParameter = e_name != null ?
                new ObjectParameter("e_name", e_name) :
                new ObjectParameter("e_name", typeof(string));
    
            var e_topicParameter = e_topic != null ?
                new ObjectParameter("e_topic", e_topic) :
                new ObjectParameter("e_topic", typeof(string));
    
            var e_placeParameter = e_place != null ?
                new ObjectParameter("e_place", e_place) :
                new ObjectParameter("e_place", typeof(string));
    
            var e_dt_startParameter = e_dt_start.HasValue ?
                new ObjectParameter("e_dt_start", e_dt_start) :
                new ObjectParameter("e_dt_start", typeof(System.DateTime));
    
            var e_dt_endParameter = e_dt_end.HasValue ?
                new ObjectParameter("e_dt_end", e_dt_end) :
                new ObjectParameter("e_dt_end", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SP_PLAN", spr_idParameter, e_nameParameter, e_topicParameter, e_placeParameter, e_dt_startParameter, e_dt_endParameter, notesParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_SP_REALIZATION_Result> SP_SELECT_SP_REALIZATION(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_SP_REALIZATION_Result>("SP_SELECT_SP_REALIZATION", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_DOCTOR_LIST_SP_Result> SP_SELECT_DOCTOR_LIST_SP(string rep_id, string rep_position)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_DOCTOR_LIST_SP_Result>("SP_SELECT_DOCTOR_LIST_SP", rep_idParameter, rep_positionParameter);
        }
    
        public virtual int SP_INSERT_SPEAKER_ADDITIONAL(string spr_id, Nullable<int> sp_id, Nullable<int> dr_code, Nullable<int> sponsor_id, Nullable<double> budget_real_value)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var sponsor_idParameter = sponsor_id.HasValue ?
                new ObjectParameter("sponsor_id", sponsor_id) :
                new ObjectParameter("sponsor_id", typeof(int));
    
            var budget_real_valueParameter = budget_real_value.HasValue ?
                new ObjectParameter("budget_real_value", budget_real_value) :
                new ObjectParameter("budget_real_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SPEAKER_ADDITIONAL", spr_idParameter, sp_idParameter, dr_codeParameter, sponsor_idParameter, budget_real_valueParameter);
        }
    
        public virtual int SP_INSERT_SPEAKER_EDIT(string spr_id, Nullable<int> sp_id, Nullable<int> dr_code, Nullable<int> sponsor_id, Nullable<double> budget_plan_value)
        {
            var spr_idParameter = spr_id != null ?
                new ObjectParameter("spr_id", spr_id) :
                new ObjectParameter("spr_id", typeof(string));
    
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var sponsor_idParameter = sponsor_id.HasValue ?
                new ObjectParameter("sponsor_id", sponsor_id) :
                new ObjectParameter("sponsor_id", typeof(int));
    
            var budget_plan_valueParameter = budget_plan_value.HasValue ?
                new ObjectParameter("budget_plan_value", budget_plan_value) :
                new ObjectParameter("budget_plan_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SPEAKER_EDIT", spr_idParameter, sp_idParameter, dr_codeParameter, sponsor_idParameter, budget_plan_valueParameter);
        }
    
        public virtual int SP_SAVE_SP_REALIZATION(Nullable<int> spds_id, Nullable<int> sponsor_id, Nullable<int> dr_actual, Nullable<double> budget_real_value)
        {
            var spds_idParameter = spds_id.HasValue ?
                new ObjectParameter("spds_id", spds_id) :
                new ObjectParameter("spds_id", typeof(int));
    
            var sponsor_idParameter = sponsor_id.HasValue ?
                new ObjectParameter("sponsor_id", sponsor_id) :
                new ObjectParameter("sponsor_id", typeof(int));
    
            var dr_actualParameter = dr_actual.HasValue ?
                new ObjectParameter("dr_actual", dr_actual) :
                new ObjectParameter("dr_actual", typeof(int));
    
            var budget_real_valueParameter = budget_real_value.HasValue ?
                new ObjectParameter("budget_real_value", budget_real_value) :
                new ObjectParameter("budget_real_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SAVE_SP_REALIZATION", spds_idParameter, sponsor_idParameter, dr_actualParameter, budget_real_valueParameter);
        }
    
        public virtual int SP_SUBMIT_SP_REALIZATION(Nullable<int> sp_id, Nullable<System.DateTime> date_realization, Nullable<int> realization_state, string event_place)
        {
            var sp_idParameter = sp_id.HasValue ?
                new ObjectParameter("sp_id", sp_id) :
                new ObjectParameter("sp_id", typeof(int));
    
            var date_realizationParameter = date_realization.HasValue ?
                new ObjectParameter("date_realization", date_realization) :
                new ObjectParameter("date_realization", typeof(System.DateTime));
    
            var realization_stateParameter = realization_state.HasValue ?
                new ObjectParameter("realization_state", realization_state) :
                new ObjectParameter("realization_state", typeof(int));
    
            var event_placeParameter = event_place != null ?
                new ObjectParameter("event_place", event_place) :
                new ObjectParameter("event_place", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SUBMIT_SP_REALIZATION", sp_idParameter, date_realizationParameter, realization_stateParameter, event_placeParameter);
        }
    
        public virtual ObjectResult<sp_offline_Bagian_Result> sp_offline_Bagian(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_Bagian_Result>("sp_offline_Bagian", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_Departemen_Result> sp_offline_Departemen(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_Departemen_Result>("sp_offline_Departemen", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_HeadQuarter_Result> sp_offline_HeadQuarter(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_HeadQuarter_Result>("sp_offline_HeadQuarter", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_Jabatan_Result> sp_offline_Jabatan(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_Jabatan_Result>("sp_offline_Jabatan", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_bo_Result> sp_offline_m_bo(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_bo_Result>("sp_offline_m_bo", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_customer_aso_Result> sp_offline_m_customer_aso(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_customer_aso_Result>("sp_offline_m_customer_aso", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_doctor_Result> sp_offline_m_doctor(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_doctor_Result>("sp_offline_m_doctor", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_gl_cs_Result> sp_offline_m_gl_cs(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_gl_cs_Result>("sp_offline_m_gl_cs", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_regional_Result> sp_offline_m_regional(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_regional_Result>("sp_offline_m_regional", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_sbo_Result> sp_offline_m_sbo(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_sbo_Result>("sp_offline_m_sbo", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_topic_Result> sp_offline_m_topic(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_topic_Result>("sp_offline_m_topic", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_visit_Result> sp_offline_t_visit(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_visit_Result>("sp_offline_t_visit", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_Karyawan_Result> sp_offline_Karyawan(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_Karyawan_Result>("sp_offline_Karyawan", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_MASTER_DOCTOR_PIVOT_Result> SP_SELECT_MASTER_DOCTOR_PIVOT(string department, string rep_position, string rep_id)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_MASTER_DOCTOR_PIVOT_Result>("SP_SELECT_MASTER_DOCTOR_PIVOT", departmentParameter, rep_positionParameter, rep_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_SP_PIVOT_REPORT_Result> SP_SELECT_SP_PIVOT_REPORT(string dateStart, string dateEnd, string position, string nik)
        {
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var nikParameter = nik != null ?
                new ObjectParameter("nik", nik) :
                new ObjectParameter("nik", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_SP_PIVOT_REPORT_Result>("SP_SELECT_SP_PIVOT_REPORT", dateStartParameter, dateEndParameter, positionParameter, nikParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_PROFILE_DOCTORE_DETAIL_Result> SP_SELECT_PROFILE_DOCTORE_DETAIL(Nullable<int> dr_code, Nullable<int> years)
        {
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var yearsParameter = years.HasValue ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_PROFILE_DOCTORE_DETAIL_Result>("SP_SELECT_PROFILE_DOCTORE_DETAIL", dr_codeParameter, yearsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f_isAnyDayLessThenMinimumDoctor(string rep_id)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f_isAnyDayLessThenMinimumDoctor", rep_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f_isMaxLimitedDoctorinCurrDay(string rep_id, string visit_date_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan != null ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f_isMaxLimitedDoctorinCurrDay", rep_idParameter, visit_date_planParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f_isMaxLimitedDoctorinCurrDayOnAdditional(string rep_id, string visit_date_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan != null ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f_isMaxLimitedDoctorinCurrDayOnAdditional", rep_idParameter, visit_date_planParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_FINISHED_VISIT_SEARCH_MOBILE_Result> SP_SELECT_FINISHED_VISIT_SEARCH_MOBILE(string rep_id, Nullable<int> month, Nullable<int> year, string searchtext)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_FINISHED_VISIT_SEARCH_MOBILE_Result>("SP_SELECT_FINISHED_VISIT_SEARCH_MOBILE", rep_idParameter, monthParameter, yearParameter, searchtextParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_product_Result> sp_offline_m_product(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_product_Result>("sp_offline_m_product", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_rep_Result> sp_offline_m_rep(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_rep_Result>("sp_offline_m_rep", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_OWN_BUDGET_REMAINING(Nullable<int> year, Nullable<int> month, string spType, string rep_id)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var spTypeParameter = spType != null ?
                new ObjectParameter("spType", spType) :
                new ObjectParameter("spType", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_OWN_BUDGET_REMAINING", yearParameter, monthParameter, spTypeParameter, rep_idParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_sp_Result> sp_offline_t_sp(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_sp_Result>("sp_offline_t_sp", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_sp_doctor_Result> sp_offline_t_sp_doctor(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_sp_doctor_Result>("sp_offline_t_sp_doctor", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_sp_sponsor_Result> sp_offline_t_sp_sponsor(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_sp_sponsor_Result>("sp_offline_t_sp_sponsor", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_spr_Result> sp_offline_t_spr(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_spr_Result>("sp_offline_t_spr", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_event_Result> sp_offline_m_event(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_event_Result>("sp_offline_m_event", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_sponsor_Result> sp_offline_m_sponsor(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_sponsor_Result>("sp_offline_m_sponsor", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_status_Result> sp_offline_m_status(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_status_Result>("sp_offline_m_status", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual int SP_INSERT_SP_ATTACHMENT_MOBILE(string visit_id, string file_name, string file_path)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var file_pathParameter = file_path != null ?
                new ObjectParameter("file_path", file_path) :
                new ObjectParameter("file_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_ATTACHMENT_MOBILE", visit_idParameter, file_nameParameter, file_pathParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_visit_product_Result> sp_offline_t_visit_product(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_visit_product_Result>("sp_offline_t_visit_product", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_visit_product_topic_Result> sp_offline_t_visit_product_topic(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_visit_product_topic_Result>("sp_offline_t_visit_product_topic", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_gps_mobile_Result> sp_offline_t_gps_mobile(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_gps_mobile_Result>("sp_offline_t_gps_mobile", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_signature_mobile_Result> sp_offline_t_signature_mobile(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_signature_mobile_Result>("sp_offline_t_signature_mobile", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_m_info_feedback_mobile_Result> sp_offline_m_info_feedback_mobile(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_m_info_feedback_mobile_Result>("sp_offline_m_info_feedback_mobile", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_offline_t_info_feedback_topic_mapping_mobile_Result> sp_offline_t_info_feedback_topic_mapping_mobile(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_offline_t_info_feedback_topic_mapping_mobile_Result>("sp_offline_t_info_feedback_topic_mapping_mobile", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<string> SyncTrans(string listProduct, string listTopic, string listSign)
        {
            var listProductParameter = listProduct != null ?
                new ObjectParameter("listProduct", listProduct) :
                new ObjectParameter("listProduct", typeof(string));
    
            var listTopicParameter = listTopic != null ?
                new ObjectParameter("listTopic", listTopic) :
                new ObjectParameter("listTopic", typeof(string));
    
            var listSignParameter = listSign != null ?
                new ObjectParameter("listSign", listSign) :
                new ObjectParameter("listSign", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SyncTrans", listProductParameter, listTopicParameter, listSignParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CHECK_TOPIC_AVAIL(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CHECK_TOPIC_AVAIL", visit_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK_MOBILE(string rep_id, Nullable<System.DateTime> visit_date_plan, Nullable<int> dr_code)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SELECT_IS_ALREADY_PLANNED_DOCTOR_IN_CURR_WEEK_MOBILE", rep_idParameter, visit_date_planParameter, dr_codeParameter);
        }
    
        public virtual int SP_INSERT_VISIT_REALIZATION_NO_PLAN(string visit_id, string rep_id, Nullable<System.DateTime> visit_date_plan, Nullable<int> dr_code, string visit_info, string rep_position, Nullable<int> visit_type)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            var dr_codeParameter = dr_code.HasValue ?
                new ObjectParameter("dr_code", dr_code) :
                new ObjectParameter("dr_code", typeof(int));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var rep_positionParameter = rep_position != null ?
                new ObjectParameter("rep_position", rep_position) :
                new ObjectParameter("rep_position", typeof(string));
    
            var visit_typeParameter = visit_type.HasValue ?
                new ObjectParameter("visit_type", visit_type) :
                new ObjectParameter("visit_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_VISIT_REALIZATION_NO_PLAN", visit_idParameter, rep_idParameter, visit_date_planParameter, dr_codeParameter, visit_infoParameter, rep_positionParameter, visit_typeParameter);
        }
    
        public virtual int SP_INSERT_SP_2_ON_VISIT_REALIZATION_ADDITIONAL_MOBILE(string visit_id, string info, string budgetAllocation, Nullable<double> amount_sp, string eName, string ePlace, string listAttachment, Nullable<int> visit_type)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("info", info) :
                new ObjectParameter("info", typeof(string));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var amount_spParameter = amount_sp.HasValue ?
                new ObjectParameter("amount_sp", amount_sp) :
                new ObjectParameter("amount_sp", typeof(double));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("eName", eName) :
                new ObjectParameter("eName", typeof(string));
    
            var ePlaceParameter = ePlace != null ?
                new ObjectParameter("ePlace", ePlace) :
                new ObjectParameter("ePlace", typeof(string));
    
            var listAttachmentParameter = listAttachment != null ?
                new ObjectParameter("listAttachment", listAttachment) :
                new ObjectParameter("listAttachment", typeof(string));
    
            var visit_typeParameter = visit_type.HasValue ?
                new ObjectParameter("visit_type", visit_type) :
                new ObjectParameter("visit_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2_ON_VISIT_REALIZATION_ADDITIONAL_MOBILE", visit_idParameter, infoParameter, budgetAllocationParameter, amount_spParameter, eNameParameter, ePlaceParameter, listAttachmentParameter, visit_typeParameter);
        }
    
        public virtual int SP_INSERT_SP_2_ON_VISIT_REALIZATION_MOBILE(string visit_id, string rep_id, string visit_info, Nullable<int> visit_realization, Nullable<double> sp_real_amount, string budgetAllocation, string e_name, string e_place, string listAttachment, Nullable<int> visit_type)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_infoParameter = visit_info != null ?
                new ObjectParameter("visit_info", visit_info) :
                new ObjectParameter("visit_info", typeof(string));
    
            var visit_realizationParameter = visit_realization.HasValue ?
                new ObjectParameter("visit_realization", visit_realization) :
                new ObjectParameter("visit_realization", typeof(int));
    
            var sp_real_amountParameter = sp_real_amount.HasValue ?
                new ObjectParameter("sp_real_amount", sp_real_amount) :
                new ObjectParameter("sp_real_amount", typeof(double));
    
            var budgetAllocationParameter = budgetAllocation != null ?
                new ObjectParameter("budgetAllocation", budgetAllocation) :
                new ObjectParameter("budgetAllocation", typeof(string));
    
            var e_nameParameter = e_name != null ?
                new ObjectParameter("e_name", e_name) :
                new ObjectParameter("e_name", typeof(string));
    
            var e_placeParameter = e_place != null ?
                new ObjectParameter("e_place", e_place) :
                new ObjectParameter("e_place", typeof(string));
    
            var listAttachmentParameter = listAttachment != null ?
                new ObjectParameter("listAttachment", listAttachment) :
                new ObjectParameter("listAttachment", typeof(string));
    
            var visit_typeParameter = visit_type.HasValue ?
                new ObjectParameter("visit_type", visit_type) :
                new ObjectParameter("visit_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SP_2_ON_VISIT_REALIZATION_MOBILE", visit_idParameter, rep_idParameter, visit_infoParameter, visit_realizationParameter, sp_real_amountParameter, budgetAllocationParameter, e_nameParameter, e_placeParameter, listAttachmentParameter, visit_typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_CHECK_MAX_ADDITIONAL_VISIT(string rep_id, Nullable<System.DateTime> visit_date_plan)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var visit_date_planParameter = visit_date_plan.HasValue ?
                new ObjectParameter("visit_date_plan", visit_date_plan) :
                new ObjectParameter("visit_date_plan", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_CHECK_MAX_ADDITIONAL_VISIT", rep_idParameter, visit_date_planParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_FINISHED_VISIT_MOBILE_Result> SP_SELECT_FINISHED_VISIT_MOBILE(string rep_id, Nullable<int> month, Nullable<int> year)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_FINISHED_VISIT_MOBILE_Result>("SP_SELECT_FINISHED_VISIT_MOBILE", rep_idParameter, monthParameter, yearParameter);
        }
    
        public virtual int SP_CONFIRM_ASSOCIATE_VISIT(Nullable<int> associate_id)
        {
            var associate_idParameter = associate_id.HasValue ?
                new ObjectParameter("associate_id", associate_id) :
                new ObjectParameter("associate_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CONFIRM_ASSOCIATE_VISIT", associate_idParameter);
        }
    
        public virtual int SP_REJECT_ASSOCIATE_VISIT(Nullable<int> associate_id)
        {
            var associate_idParameter = associate_id.HasValue ?
                new ObjectParameter("associate_id", associate_id) :
                new ObjectParameter("associate_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REJECT_ASSOCIATE_VISIT", associate_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_ASSOCIATED_Result> SP_SELECT_VISIT_ASSOCIATED(string rep_id)
        {
            var rep_idParameter = rep_id != null ?
                new ObjectParameter("rep_id", rep_id) :
                new ObjectParameter("rep_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_ASSOCIATED_Result>("SP_SELECT_VISIT_ASSOCIATED", rep_idParameter);
        }
    
        public virtual ObjectResult<SP_SELECT_VISIT_ASSOCIATED_BY_VISIT_ID_Result> SP_SELECT_VISIT_ASSOCIATED_BY_VISIT_ID(string visit_id)
        {
            var visit_idParameter = visit_id != null ?
                new ObjectParameter("visit_id", visit_id) :
                new ObjectParameter("visit_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECT_VISIT_ASSOCIATED_BY_VISIT_ID_Result>("SP_SELECT_VISIT_ASSOCIATED_BY_VISIT_ID", visit_idParameter);
        }
    }
}
